<section id="filterable-content"></section>

<script type="text/babel">

// Component to render the clear filters field
// To DO: clear fields on click,
var ClearFilter = React.createClass({
	render: function(){
		return(
			<div>
				<div className="clear-filter">
					<a href="#" id="clear-filter">Clear filters</a>
				</div>
			</div>
		)
	}
});

var CheckBoxes = React.createClass({

	mvisChange: function(){
		console.log('mvis checkbox has been ticked');
		// To Do: add the filter/change events. Waaaay ahead of that though.
		// Use boxes to alter state, how we'll eventually initiate the filtering 
	},

	booksChange: function(){
		console.log('book checkbox has been ticked');
		// To Do: add the filter/change events. Waaaay ahead of that though. 
		// mar thuas. 
	},

	render: function(){
		return(
			<div>
				<div className="mvis">
					<input type="checkbox" onChange={this.mvisChange}/>
					<label>Movies</label>
				</div>
				<div className="books">
					<input type="checkbox" onChange={this.booksChange}/>
					<label>Books</label>
				</div>
			</div>
		)
	}
}); 

// Component to render the search box field
// ToDO: MOst of it. 

var SearchBox = React.createClass({
		render: function() {
		    return (
		  	<div>
				<input type="text" className="search" placeholder="Search" />
			</div>
		    );
		  }
});


// Render the component for the Year dropdown list
// TO DO: Dynamically populate the options list and output


var YearList = React.createClass({
	render: function(){
		return(
		<div className="fl-lt">
			<select id="Year" multiple>
				<option value="" default>YEARS</option>
				<option value="2016">2016</option>
				<option value="2012">2012</option>
				<option value="1989">1989</option>
				<option value="1973">1973</option>
				<option value="1945">1945</option>
			</select>
			<div></div>
		</div>
		)
	}
});


// Render the component for the Genre dropdown list
// TO DO: Dynamically populate the options list and output

var GenreList = React.createClass({
	
	render: function(){
		return(
			<div className="fl-lt">
				<select id="Genre">
				</select>
				<div></div>
			</div>
		)
	}
});


// Dropdown Filters (pass in components we're rendering for the GenreList, YearList and SearchBox. Also ClearFilter, but may break that out. We'll see. It's late and I can barely see straight. )

var DropDownFilters = React.createClass({

	render: function(){
		return (
			<div>
				<GenreList />
				<YearList />
				<SearchBox />
				<CheckBoxes />
				<ClearFilter />

			</div>
		);
	}
});

// Right, on to the actual element. So we're going to render the movies into the ul and then once (read as - if) there's some output we'll wire it up. 

var MovieItem = React.createClass({

	linkOnClick: function(){
		// ToDo: Something useful. 
		console.log(this.props.data); 
	}, 

	render: function(){
		var movieItems = this.props.data.map(function (data) {
            return (
                <li>
	            	<img src={data.poster} />
					<p>{data.title} ({data.year})</p>
					<p>Genre: {data.genre}</p>
				</li>
            );
        });
			return(
				<div>
		    		{movieItems}
				</div>
			)
		}
	}); 

var MovieOutput = React.createClass({
	render: function(){
		return(
		<div>
			<div id="movies">
				<div>
					<ul id="list">
						<MovieItem data={this.props.data}/>
					</ul>
				</div>
			</div> 
		</div>
		)
	}
});

// Render the MovieList Component to the filterable-content section
// load in JSON data from file (set URL on the output component so I can use it again as this.props/url)
// probably betrer to pass values for lists and stuff as props. Bit more reading. 

var MovieList = React.createClass({

	loadMoviesFromJson: function() {
	    $.ajax({
	      url: this.props.url,
	      dataType: 'json',
	      success: function(data) {
	        this.setState({data: data.media});
	      	console.log(this.state.data);	        
	        // grand - is logging the object, seems to be correct. Fire ahead so... 
	      }.bind(this),
	      error: function(xhr, status, err) {
	        console.error(this.props.url, status, err.toString());
	      }.bind(this)
	    });
	},	

	getInitialState: function() {
	    // pass in an empty array so that this returns true/doesn't throw an error. 
	    //console.log(data);
	    console.log("initial state");
	    return {data: []}; 
	   	
	},

    componentDidMount: function(){
	  	// fire up the function to load in the json. 
		this.loadMoviesFromJson();
  	}, 
   
	render: function() {    
		
		return (
	  	
	      <div>
	      		<div>
	      			<div className="filter">
	        			<DropDownFilters />
	        		</div>
	        		
	        		<MovieOutput data={this.state.data}/>
	        		
	     		</div>
	     </div>
	    );
	  }
	});

// Render the actual component
ReactDOM.render(
    <MovieList url='../src/js/data/data.json' />,
    document.getElementById('filterable-content')
 );

</script>