<section id="filterable-content"></section>

<script type="text/babel">
// Component to render the clear filters field
// To DO: clear fields on click, maybe refresh page. 

var ClearFilter = React.createClass({
	render: function(){
		return(
			<div>
				<div className="mvis">
					<input type="checkbox" data-sort="type" />
					<label>Movies</label>
				</div>
				<div className="books">
					<input type="checkbox" data-sort="type" />
					<label>Books</label>
				</div>
				<div className="clear-filter">
					<a href="#" id="clear-filter">Clear filters</a>
				</div>
			</div>
		)
	}
});

// Component to render the search box field
// ToDO: MOst of it. 

var SearchBox = React.createClass({
	render: function() {
    return (
      <div>
		<input type="text" className="search" placeholder="Search" />
	</div>
    );
  }
});


// Render the component for the Year dropdown list
// TO DO: Dynamically populate the options list and output

var YearList = React.createClass({
	render: function(){
		return(
		<div className="fl-lt">
			<select id="Year">
				<option value="" default>YEARS</option>
				<option value="2016">2016</option>
				<option value="2012">2012</option>
				<option value="1989">1989</option>
				<option value="1973">1973</option>
				<option value="1945">1945</option>
			</select>
			<div></div>
		</div>
		)
	}
});


// Render the component for the Genre dropdown list
// TO DO: Dynamically populate the options list and output

var GenreList = React.createClass({
	
	render: function(){
		return(
			<div className="fl-lt">
				<select id="Genre">
				</select>
				<div></div>
			</div>
		)
	}
});


// Dropdown Filters (pass in components we're rendering for the GenreList, YearList and SearchBox. Also ClearFilter, but may break that out. We'll see. It's late and I can barely see straight. )

var DropDownFilters = React.createClass({

	render: function(){
		//console.log(this.props.value);
		return (
			<div>
				<GenreList />
				<YearList />
				<SearchBox />
				<ClearFilter />
			</div>
		);
	}
});
// Right, on to the actual element. So we're going to render the movies into the ul and then once there's some output we'll hook it up. 




var MovieItem = React.createClass({

	render: function(){
		return(
			<li>
				<img src="" />
				<p>Title</p>
				<p>Genre: {this.props.type}</p>
			</li>
			)
	}
}); 

var Movie = React.createClass({

	render: function(){
		return(
		<div>
			<div id="movies">
				<div>
					<ul id="list">
						<MovieItem />
					</ul>
				</div>
			</div> 
		</div>
		)
	}
});

// Render the MovieList Component to the filterable-content section
// Okay, Parent Component
// load in JSON data from file (set URL on the output component so I can use it again as this.props/url)
// probably betrer to pass values for lists and stuff as state rather than props. Bit more reading. 

var MovieList = React.createClass({
  loadMoviesFromJson: function() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function(data) {
        this.setState({data: data});
        
        // spit this out in the console to see what the craic is. 
        console.log(data);
        // grand - is logging the object. 

      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },	

  getInitialState: function() {
    // pass in an empty array so that this returns true/doesn't throw an error. 
    return {data: []}; 
  },

  componentDidMount: function(){
  	// fire up the function to load in the json. 
	this.loadMoviesFromJson();
  }, 
   
  render: function() {
  	  // var obj = this.state.data.media.map(function(obj) {
  	  // 	return <div>{obj}</div>;
     //  });
    
	return (
  	
      <div>
      		<div>
      			<div className="filter">
        			<DropDownFilters />
        		</div>
        		<Movie />
     		</div>
     </div>
    );
  }
});

ReactDOM.render(
    <MovieList url='../src/js/data/data.json'/>,
    document.getElementById('filterable-content')
 );

</script>